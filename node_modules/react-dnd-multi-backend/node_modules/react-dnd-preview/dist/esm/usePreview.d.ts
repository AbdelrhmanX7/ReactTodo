import { CSSProperties, RefCallback, RefObject } from 'react';
import { DragLayerMonitor, DragObjectWithType, DragSourceHookSpec } from 'react-dnd';
export declare type usePreviewState<T extends DragObjectWithType = DragObjectWithType, El extends Element = Element> = {
    display: false;
} | usePreviewStateFull<T, El>;
export declare type usePreviewStateFull<T extends DragObjectWithType = DragObjectWithType, El extends Element = Element> = {
    display: true;
} & usePreviewStateContent<T, El>;
declare type DragSpec<T extends DragObjectWithType> = DragSourceHookSpec<T, unknown, unknown>;
export declare type usePreviewStateContent<T extends DragObjectWithType = DragObjectWithType, El extends Element = Element> = {
    ref: RefCallback<El> | RefObject<El>;
    itemType: DragSpec<T>['item']['type'] | null;
    item: T;
    style: CSSProperties;
    monitor: DragLayerMonitor;
};
export declare const usePreview: <T extends DragObjectWithType = DragObjectWithType, El extends Element = Element>() => usePreviewState<T, El>;
export {};
