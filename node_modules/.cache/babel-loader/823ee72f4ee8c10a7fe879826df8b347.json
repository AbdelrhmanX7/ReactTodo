{"ast":null,"code":"import _objectSpread from\"E:/Front-End-Challenges/React-Challenges/Completed Challenges/ReactTodo/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"E:/Front-End-Challenges/React-Challenges/Completed Challenges/ReactTodo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import\"./../UI/Todo.css\";import icon_check from\"./../icon-check.svg\";import icon_cross from\"./../icon-cross.svg\";import React from\"react\";import{useDrag,useDrop}from'react-dnd';import{ItemType}from\"../../utils/items\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var style={border:'1px dashed gray',padding:'0.5rem 1rem',backgroundColor:'white',cursor:'move'};var TodoResults=function TodoResults(props){var id=props.id;var findCard=props.findCard;var moveCard=props.moveCard;var originalIndex=props.findCard(id).index;var _useDrag=useDrag(function(){return{type:ItemType.CARD,item:{id:id,originalIndex:originalIndex},collect:function collect(monitor){return{isDragging:monitor.isDragging()};},end:function end(item,monitor){var droppedId=item.id,originalIndex=item.originalIndex;var didDrop=monitor.didDrop();if(!didDrop){moveCard(droppedId,originalIndex);}}};},[id,originalIndex,moveCard]),_useDrag2=_slicedToArray(_useDrag,2),isDragging=_useDrag2[0].isDragging,drag=_useDrag2[1];var _useDrop=useDrop(function(){return{accept:ItemType.CARD,hover:function hover(_ref){var draggedId=_ref.id;if(draggedId!==id){var _findCard=findCard(id),overIndex=_findCard.index;moveCard(draggedId,overIndex);}}};},[findCard,moveCard]),_useDrop2=_slicedToArray(_useDrop,2),drop=_useDrop2[1];var opacity=isDragging?0:1;var Complete_Task=function Complete_Task(){props.checkState(props.id);props.CheckLen();};var onDelete=function onDelete(){props.Delete(props.id);};var Handle_Error=function Handle_Error(){};return/*#__PURE__*/_jsxs(\"li\",{ref:function ref(node){return drag(drop(node));},style:_objectSpread(_objectSpread({},style),{},{opacity:opacity}),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"list-check\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"Handle_Errors\",onClick:Handle_Error}),/*#__PURE__*/_jsxs(\"button\",{className:\"Checked Checked-\".concat(props.state),onClick:Complete_Task,children:[/*#__PURE__*/_jsx(\"img\",{src:icon_check,alt:\"\"}),/*#__PURE__*/_jsx(\"div\",{className:\"Checked-Border\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"\".concat(props.state),children:props.value})]}),/*#__PURE__*/_jsx(\"button\",{onClick:onDelete,className:\"Deleted\",children:/*#__PURE__*/_jsx(\"img\",{src:icon_cross,alt:\"\"})})]});};export default TodoResults;","map":{"version":3,"names":["icon_check","icon_cross","React","useDrag","useDrop","ItemType","style","border","padding","backgroundColor","cursor","TodoResults","props","id","findCard","moveCard","originalIndex","index","type","CARD","item","collect","monitor","isDragging","end","droppedId","didDrop","drag","accept","hover","draggedId","overIndex","drop","opacity","Complete_Task","checkState","CheckLen","onDelete","Delete","Handle_Error","node","state","value"],"sources":["E:/Front-End-Challenges/React-Challenges/Completed Challenges/ReactTodo/src/components/TodoList/TodoResults.js"],"sourcesContent":["import \"./../UI/Todo.css\";\r\nimport icon_check from \"./../icon-check.svg\";\r\nimport icon_cross from \"./../icon-cross.svg\";\r\nimport React from \"react\";\r\nimport { useDrag, useDrop } from 'react-dnd'\r\nimport { ItemType } from \"../../utils/items\";\r\nconst style = {\r\n  border: '1px dashed gray',\r\n  padding: '0.5rem 1rem',\r\n  backgroundColor: 'white',\r\n  cursor: 'move',\r\n}\r\nconst TodoResults = (props) => {\r\n  const id = props.id\r\n  const findCard = props.findCard\r\n  const moveCard = props.moveCard\r\n  const originalIndex = props.findCard(id).index\r\n  \r\n  const [{ isDragging }, drag] = useDrag(\r\n    () => ({\r\n      type: ItemType.CARD,\r\n      item: { id, originalIndex },\r\n      collect: (monitor) => ({\r\n        isDragging: monitor.isDragging(),\r\n      }),\r\n      end: (item, monitor) => {\r\n        const { id: droppedId, originalIndex } = item\r\n        const didDrop = monitor.didDrop()\r\n        if (!didDrop) {\r\n          moveCard(droppedId, originalIndex)\r\n        }\r\n      },\r\n    }),\r\n    [id, originalIndex, moveCard],\r\n  )\r\n\r\n  const [, drop] = useDrop(\r\n    () => ({\r\n      accept: ItemType.CARD,\r\n      hover({ id: draggedId }) {\r\n        if (draggedId !== id) {\r\n          const { index: overIndex } = findCard(id)\r\n          moveCard(draggedId, overIndex)\r\n        }\r\n      },\r\n    }),\r\n    [findCard, moveCard],\r\n  )\r\n  const opacity = isDragging ? 0 : 1\r\n\r\n\r\n  const Complete_Task = () => {\r\n    props.checkState(props.id);\r\n    props.CheckLen();\r\n  };\r\n\r\n\r\n  const onDelete = () => {\r\n    props.Delete(props.id)\r\n  }\r\n  const Handle_Error = () => {\r\n\r\n  }\r\n  return (\r\n    <li ref={(node) => drag(drop(node))} style={{...style, opacity }}>\r\n      <div className=\"list-check\">\r\n        <button className=\"Handle_Errors\" onClick={Handle_Error}></button>\r\n        <button className={`Checked Checked-${props.state}`} onClick={Complete_Task}>\r\n          <img src={icon_check} alt=\"\" />\r\n          <div className={`Checked-Border`}></div>\r\n        </button>\r\n        <p className={`${props.state}`}>{props.value}</p>\r\n      </div>\r\n      <button onClick={onDelete} className=\"Deleted\">\r\n        <img src={icon_cross} alt=\"\" />\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\nexport default TodoResults;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}