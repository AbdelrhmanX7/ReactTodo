{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nimport { invariant } from '@react-dnd/invariant';\nimport { matchesType } from '../utils/matchesType';\nimport { getSourceClientOffset as _getSourceClientOffset, getDifferenceFromInitialOffset as _getDifferenceFromInitialOffset } from '../utils/coords';\nimport { areDirty } from '../utils/dirtiness';\nexport var DragDropMonitorImpl = /*#__PURE__*/function () {\n  function DragDropMonitorImpl(store, registry) {\n    _classCallCheck(this, DragDropMonitorImpl);\n\n    this.store = store;\n    this.registry = registry;\n  }\n\n  _createClass(DragDropMonitorImpl, [{\n    key: \"subscribeToStateChange\",\n    value: function subscribeToStateChange(listener) {\n      var _this = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        handlerIds: undefined\n      };\n      var handlerIds = options.handlerIds;\n      invariant(typeof listener === 'function', 'listener must be a function.');\n      invariant(typeof handlerIds === 'undefined' || Array.isArray(handlerIds), 'handlerIds, when specified, must be an array of strings.');\n      var prevStateId = this.store.getState().stateId;\n\n      var handleChange = function handleChange() {\n        var state = _this.store.getState();\n\n        var currentStateId = state.stateId;\n\n        try {\n          var canSkipListener = currentStateId === prevStateId || currentStateId === prevStateId + 1 && !areDirty(state.dirtyHandlerIds, handlerIds);\n\n          if (!canSkipListener) {\n            listener();\n          }\n        } finally {\n          prevStateId = currentStateId;\n        }\n      };\n\n      return this.store.subscribe(handleChange);\n    }\n  }, {\n    key: \"subscribeToOffsetChange\",\n    value: function subscribeToOffsetChange(listener) {\n      var _this2 = this;\n\n      invariant(typeof listener === 'function', 'listener must be a function.');\n      var previousState = this.store.getState().dragOffset;\n\n      var handleChange = function handleChange() {\n        var nextState = _this2.store.getState().dragOffset;\n\n        if (nextState === previousState) {\n          return;\n        }\n\n        previousState = nextState;\n        listener();\n      };\n\n      return this.store.subscribe(handleChange);\n    }\n  }, {\n    key: \"canDragSource\",\n    value: function canDragSource(sourceId) {\n      if (!sourceId) {\n        return false;\n      }\n\n      var source = this.registry.getSource(sourceId);\n      invariant(source, \"Expected to find a valid source. sourceId=\".concat(sourceId));\n\n      if (this.isDragging()) {\n        return false;\n      }\n\n      return source.canDrag(this, sourceId);\n    }\n  }, {\n    key: \"canDropOnTarget\",\n    value: function canDropOnTarget(targetId) {\n      // undefined on initial render\n      if (!targetId) {\n        return false;\n      }\n\n      var target = this.registry.getTarget(targetId);\n      invariant(target, \"Expected to find a valid target. targetId=\".concat(targetId));\n\n      if (!this.isDragging() || this.didDrop()) {\n        return false;\n      }\n\n      var targetType = this.registry.getTargetType(targetId);\n      var draggedItemType = this.getItemType();\n      return matchesType(targetType, draggedItemType) && target.canDrop(this, targetId);\n    }\n  }, {\n    key: \"isDragging\",\n    value: function isDragging() {\n      return Boolean(this.getItemType());\n    }\n  }, {\n    key: \"isDraggingSource\",\n    value: function isDraggingSource(sourceId) {\n      // undefined on initial render\n      if (!sourceId) {\n        return false;\n      }\n\n      var source = this.registry.getSource(sourceId, true);\n      invariant(source, \"Expected to find a valid source. sourceId=\".concat(sourceId));\n\n      if (!this.isDragging() || !this.isSourcePublic()) {\n        return false;\n      }\n\n      var sourceType = this.registry.getSourceType(sourceId);\n      var draggedItemType = this.getItemType();\n\n      if (sourceType !== draggedItemType) {\n        return false;\n      }\n\n      return source.isDragging(this, sourceId);\n    }\n  }, {\n    key: \"isOverTarget\",\n    value: function isOverTarget(targetId) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        shallow: false\n      }; // undefined on initial render\n\n      if (!targetId) {\n        return false;\n      }\n\n      var shallow = options.shallow;\n\n      if (!this.isDragging()) {\n        return false;\n      }\n\n      var targetType = this.registry.getTargetType(targetId);\n      var draggedItemType = this.getItemType();\n\n      if (draggedItemType && !matchesType(targetType, draggedItemType)) {\n        return false;\n      }\n\n      var targetIds = this.getTargetIds();\n\n      if (!targetIds.length) {\n        return false;\n      }\n\n      var index = targetIds.indexOf(targetId);\n\n      if (shallow) {\n        return index === targetIds.length - 1;\n      } else {\n        return index > -1;\n      }\n    }\n  }, {\n    key: \"getItemType\",\n    value: function getItemType() {\n      return this.store.getState().dragOperation.itemType;\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem() {\n      return this.store.getState().dragOperation.item;\n    }\n  }, {\n    key: \"getSourceId\",\n    value: function getSourceId() {\n      return this.store.getState().dragOperation.sourceId;\n    }\n  }, {\n    key: \"getTargetIds\",\n    value: function getTargetIds() {\n      return this.store.getState().dragOperation.targetIds;\n    }\n  }, {\n    key: \"getDropResult\",\n    value: function getDropResult() {\n      return this.store.getState().dragOperation.dropResult;\n    }\n  }, {\n    key: \"didDrop\",\n    value: function didDrop() {\n      return this.store.getState().dragOperation.didDrop;\n    }\n  }, {\n    key: \"isSourcePublic\",\n    value: function isSourcePublic() {\n      return Boolean(this.store.getState().dragOperation.isSourcePublic);\n    }\n  }, {\n    key: \"getInitialClientOffset\",\n    value: function getInitialClientOffset() {\n      return this.store.getState().dragOffset.initialClientOffset;\n    }\n  }, {\n    key: \"getInitialSourceClientOffset\",\n    value: function getInitialSourceClientOffset() {\n      return this.store.getState().dragOffset.initialSourceClientOffset;\n    }\n  }, {\n    key: \"getClientOffset\",\n    value: function getClientOffset() {\n      return this.store.getState().dragOffset.clientOffset;\n    }\n  }, {\n    key: \"getSourceClientOffset\",\n    value: function getSourceClientOffset() {\n      return _getSourceClientOffset(this.store.getState().dragOffset);\n    }\n  }, {\n    key: \"getDifferenceFromInitialOffset\",\n    value: function getDifferenceFromInitialOffset() {\n      return _getDifferenceFromInitialOffset(this.store.getState().dragOffset);\n    }\n  }]);\n\n  return DragDropMonitorImpl;\n}();","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","invariant","matchesType","getSourceClientOffset","_getSourceClientOffset","getDifferenceFromInitialOffset","_getDifferenceFromInitialOffset","areDirty","DragDropMonitorImpl","store","registry","value","subscribeToStateChange","listener","_this","options","arguments","undefined","handlerIds","Array","isArray","prevStateId","getState","stateId","handleChange","state","currentStateId","canSkipListener","dirtyHandlerIds","subscribe","subscribeToOffsetChange","_this2","previousState","dragOffset","nextState","canDragSource","sourceId","source","getSource","concat","isDragging","canDrag","canDropOnTarget","targetId","getTarget","didDrop","targetType","getTargetType","draggedItemType","getItemType","canDrop","Boolean","isDraggingSource","isSourcePublic","sourceType","getSourceType","isOverTarget","shallow","targetIds","getTargetIds","index","indexOf","dragOperation","itemType","getItem","item","getSourceId","getDropResult","dropResult","getInitialClientOffset","initialClientOffset","getInitialSourceClientOffset","initialSourceClientOffset","getClientOffset","clientOffset"],"sources":["E:/Front-End-Challenges/React-Challenges/Completed Challenges/ReactTodo/node_modules/react-dnd-multi-backend/node_modules/dnd-core/dist/esm/classes/DragDropMonitorImpl.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { invariant } from '@react-dnd/invariant';\nimport { matchesType } from '../utils/matchesType';\nimport { getSourceClientOffset as _getSourceClientOffset, getDifferenceFromInitialOffset as _getDifferenceFromInitialOffset } from '../utils/coords';\nimport { areDirty } from '../utils/dirtiness';\nexport var DragDropMonitorImpl = /*#__PURE__*/function () {\n  function DragDropMonitorImpl(store, registry) {\n    _classCallCheck(this, DragDropMonitorImpl);\n\n    this.store = store;\n    this.registry = registry;\n  }\n\n  _createClass(DragDropMonitorImpl, [{\n    key: \"subscribeToStateChange\",\n    value: function subscribeToStateChange(listener) {\n      var _this = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        handlerIds: undefined\n      };\n      var handlerIds = options.handlerIds;\n      invariant(typeof listener === 'function', 'listener must be a function.');\n      invariant(typeof handlerIds === 'undefined' || Array.isArray(handlerIds), 'handlerIds, when specified, must be an array of strings.');\n      var prevStateId = this.store.getState().stateId;\n\n      var handleChange = function handleChange() {\n        var state = _this.store.getState();\n\n        var currentStateId = state.stateId;\n\n        try {\n          var canSkipListener = currentStateId === prevStateId || currentStateId === prevStateId + 1 && !areDirty(state.dirtyHandlerIds, handlerIds);\n\n          if (!canSkipListener) {\n            listener();\n          }\n        } finally {\n          prevStateId = currentStateId;\n        }\n      };\n\n      return this.store.subscribe(handleChange);\n    }\n  }, {\n    key: \"subscribeToOffsetChange\",\n    value: function subscribeToOffsetChange(listener) {\n      var _this2 = this;\n\n      invariant(typeof listener === 'function', 'listener must be a function.');\n      var previousState = this.store.getState().dragOffset;\n\n      var handleChange = function handleChange() {\n        var nextState = _this2.store.getState().dragOffset;\n\n        if (nextState === previousState) {\n          return;\n        }\n\n        previousState = nextState;\n        listener();\n      };\n\n      return this.store.subscribe(handleChange);\n    }\n  }, {\n    key: \"canDragSource\",\n    value: function canDragSource(sourceId) {\n      if (!sourceId) {\n        return false;\n      }\n\n      var source = this.registry.getSource(sourceId);\n      invariant(source, \"Expected to find a valid source. sourceId=\".concat(sourceId));\n\n      if (this.isDragging()) {\n        return false;\n      }\n\n      return source.canDrag(this, sourceId);\n    }\n  }, {\n    key: \"canDropOnTarget\",\n    value: function canDropOnTarget(targetId) {\n      // undefined on initial render\n      if (!targetId) {\n        return false;\n      }\n\n      var target = this.registry.getTarget(targetId);\n      invariant(target, \"Expected to find a valid target. targetId=\".concat(targetId));\n\n      if (!this.isDragging() || this.didDrop()) {\n        return false;\n      }\n\n      var targetType = this.registry.getTargetType(targetId);\n      var draggedItemType = this.getItemType();\n      return matchesType(targetType, draggedItemType) && target.canDrop(this, targetId);\n    }\n  }, {\n    key: \"isDragging\",\n    value: function isDragging() {\n      return Boolean(this.getItemType());\n    }\n  }, {\n    key: \"isDraggingSource\",\n    value: function isDraggingSource(sourceId) {\n      // undefined on initial render\n      if (!sourceId) {\n        return false;\n      }\n\n      var source = this.registry.getSource(sourceId, true);\n      invariant(source, \"Expected to find a valid source. sourceId=\".concat(sourceId));\n\n      if (!this.isDragging() || !this.isSourcePublic()) {\n        return false;\n      }\n\n      var sourceType = this.registry.getSourceType(sourceId);\n      var draggedItemType = this.getItemType();\n\n      if (sourceType !== draggedItemType) {\n        return false;\n      }\n\n      return source.isDragging(this, sourceId);\n    }\n  }, {\n    key: \"isOverTarget\",\n    value: function isOverTarget(targetId) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        shallow: false\n      };\n\n      // undefined on initial render\n      if (!targetId) {\n        return false;\n      }\n\n      var shallow = options.shallow;\n\n      if (!this.isDragging()) {\n        return false;\n      }\n\n      var targetType = this.registry.getTargetType(targetId);\n      var draggedItemType = this.getItemType();\n\n      if (draggedItemType && !matchesType(targetType, draggedItemType)) {\n        return false;\n      }\n\n      var targetIds = this.getTargetIds();\n\n      if (!targetIds.length) {\n        return false;\n      }\n\n      var index = targetIds.indexOf(targetId);\n\n      if (shallow) {\n        return index === targetIds.length - 1;\n      } else {\n        return index > -1;\n      }\n    }\n  }, {\n    key: \"getItemType\",\n    value: function getItemType() {\n      return this.store.getState().dragOperation.itemType;\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem() {\n      return this.store.getState().dragOperation.item;\n    }\n  }, {\n    key: \"getSourceId\",\n    value: function getSourceId() {\n      return this.store.getState().dragOperation.sourceId;\n    }\n  }, {\n    key: \"getTargetIds\",\n    value: function getTargetIds() {\n      return this.store.getState().dragOperation.targetIds;\n    }\n  }, {\n    key: \"getDropResult\",\n    value: function getDropResult() {\n      return this.store.getState().dragOperation.dropResult;\n    }\n  }, {\n    key: \"didDrop\",\n    value: function didDrop() {\n      return this.store.getState().dragOperation.didDrop;\n    }\n  }, {\n    key: \"isSourcePublic\",\n    value: function isSourcePublic() {\n      return Boolean(this.store.getState().dragOperation.isSourcePublic);\n    }\n  }, {\n    key: \"getInitialClientOffset\",\n    value: function getInitialClientOffset() {\n      return this.store.getState().dragOffset.initialClientOffset;\n    }\n  }, {\n    key: \"getInitialSourceClientOffset\",\n    value: function getInitialSourceClientOffset() {\n      return this.store.getState().dragOffset.initialSourceClientOffset;\n    }\n  }, {\n    key: \"getClientOffset\",\n    value: function getClientOffset() {\n      return this.store.getState().dragOffset.clientOffset;\n    }\n  }, {\n    key: \"getSourceClientOffset\",\n    value: function getSourceClientOffset() {\n      return _getSourceClientOffset(this.store.getState().dragOffset);\n    }\n  }, {\n    key: \"getDifferenceFromInitialOffset\",\n    value: function getDifferenceFromInitialOffset() {\n      return _getDifferenceFromInitialOffset(this.store.getState().dragOffset);\n    }\n  }]);\n\n  return DragDropMonitorImpl;\n}();"],"mappings":"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"},"metadata":{},"sourceType":"module"}