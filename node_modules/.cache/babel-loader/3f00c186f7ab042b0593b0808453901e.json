{"ast":null,"code":"import { invariant } from '@react-dnd/invariant';\nimport { useRegisteredDropTarget } from './useRegisteredDropTarget';\nimport { useOptionalFactory } from '../useOptionalFactory';\nimport { useDropTargetMonitor } from './useDropTargetMonitor';\nimport { useDropTargetConnector } from './useDropTargetConnector';\nimport { useCollectedProps } from '../useCollectedProps';\nimport { useConnectDropTarget } from './connectors';\n/**\n * useDropTarget Hook\n * @param spec The drop target specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\n\nexport function useDrop(specArg, deps) {\n  var spec = useOptionalFactory(specArg, deps);\n  invariant(spec.accept != null, 'accept must be defined');\n  var monitor = useDropTargetMonitor();\n  var connector = useDropTargetConnector(spec.options);\n  useRegisteredDropTarget(spec, monitor, connector);\n  return [useCollectedProps(spec.collect, monitor, connector), useConnectDropTarget(connector)];\n}","map":{"version":3,"names":["invariant","useRegisteredDropTarget","useOptionalFactory","useDropTargetMonitor","useDropTargetConnector","useCollectedProps","useConnectDropTarget","useDrop","specArg","deps","spec","accept","monitor","connector","options","collect"],"sources":["E:/Front-End-Challenges/React-Challenges/Completed Challenges/ReactTodo/node_modules/react-dnd-multi-backend/node_modules/react-dnd/dist/esm/hooks/useDrop/useDrop.js"],"sourcesContent":["import { invariant } from '@react-dnd/invariant';\nimport { useRegisteredDropTarget } from './useRegisteredDropTarget';\nimport { useOptionalFactory } from '../useOptionalFactory';\nimport { useDropTargetMonitor } from './useDropTargetMonitor';\nimport { useDropTargetConnector } from './useDropTargetConnector';\nimport { useCollectedProps } from '../useCollectedProps';\nimport { useConnectDropTarget } from './connectors';\n/**\n * useDropTarget Hook\n * @param spec The drop target specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\n\nexport function useDrop(specArg, deps) {\n  var spec = useOptionalFactory(specArg, deps);\n  invariant(spec.accept != null, 'accept must be defined');\n  var monitor = useDropTargetMonitor();\n  var connector = useDropTargetConnector(spec.options);\n  useRegisteredDropTarget(spec, monitor, connector);\n  return [useCollectedProps(spec.collect, monitor, connector), useConnectDropTarget(connector)];\n}"],"mappings":"AAAA,SAASA,SAAT,QAA0B,sBAA1B;AACA,SAASC,uBAAT,QAAwC,2BAAxC;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,sBAAT,QAAuC,0BAAvC;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,SAASC,oBAAT,QAAqC,cAArC;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,OAAT,CAAiBC,OAAjB,EAA0BC,IAA1B,EAAgC;EACrC,IAAIC,IAAI,GAAGR,kBAAkB,CAACM,OAAD,EAAUC,IAAV,CAA7B;EACAT,SAAS,CAACU,IAAI,CAACC,MAAL,IAAe,IAAhB,EAAsB,wBAAtB,CAAT;EACA,IAAIC,OAAO,GAAGT,oBAAoB,EAAlC;EACA,IAAIU,SAAS,GAAGT,sBAAsB,CAACM,IAAI,CAACI,OAAN,CAAtC;EACAb,uBAAuB,CAACS,IAAD,EAAOE,OAAP,EAAgBC,SAAhB,CAAvB;EACA,OAAO,CAACR,iBAAiB,CAACK,IAAI,CAACK,OAAN,EAAeH,OAAf,EAAwBC,SAAxB,CAAlB,EAAsDP,oBAAoB,CAACO,SAAD,CAA1E,CAAP;AACD"},"metadata":{},"sourceType":"module"}