{"ast":null,"code":"export var strictEquality = function strictEquality(a, b) {\n  return a === b;\n};\n/**\n * Determine if two cartesian coordinate offsets are equal\n * @param offsetA\n * @param offsetB\n */\n\nexport function areCoordsEqual(offsetA, offsetB) {\n  if (!offsetA && !offsetB) {\n    return true;\n  } else if (!offsetA || !offsetB) {\n    return false;\n  } else {\n    return offsetA.x === offsetB.x && offsetA.y === offsetB.y;\n  }\n}\n/**\n * Determines if two arrays of items are equal\n * @param a The first array of items\n * @param b The second array of items\n */\n\nexport function areArraysEqual(a, b) {\n  var isEqual = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : strictEquality;\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  for (var i = 0; i < a.length; ++i) {\n    if (!isEqual(a[i], b[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}","map":{"version":3,"names":["strictEquality","a","b","areCoordsEqual","offsetA","offsetB","x","y","areArraysEqual","isEqual","arguments","length","undefined","i"],"sources":["E:/Front-End-Challenges/React-Challenges/Completed Challenges/ReactTodo/node_modules/react-dnd-multi-backend/node_modules/dnd-core/dist/esm/utils/equality.js"],"sourcesContent":["export var strictEquality = function strictEquality(a, b) {\n  return a === b;\n};\n/**\n * Determine if two cartesian coordinate offsets are equal\n * @param offsetA\n * @param offsetB\n */\n\nexport function areCoordsEqual(offsetA, offsetB) {\n  if (!offsetA && !offsetB) {\n    return true;\n  } else if (!offsetA || !offsetB) {\n    return false;\n  } else {\n    return offsetA.x === offsetB.x && offsetA.y === offsetB.y;\n  }\n}\n/**\n * Determines if two arrays of items are equal\n * @param a The first array of items\n * @param b The second array of items\n */\n\nexport function areArraysEqual(a, b) {\n  var isEqual = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : strictEquality;\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  for (var i = 0; i < a.length; ++i) {\n    if (!isEqual(a[i], b[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}"],"mappings":"AAAA,OAAO,IAAIA,cAAc,GAAG,SAASA,cAAT,CAAwBC,CAAxB,EAA2BC,CAA3B,EAA8B;EACxD,OAAOD,CAAC,KAAKC,CAAb;AACD,CAFM;AAGP;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,cAAT,CAAwBC,OAAxB,EAAiCC,OAAjC,EAA0C;EAC/C,IAAI,CAACD,OAAD,IAAY,CAACC,OAAjB,EAA0B;IACxB,OAAO,IAAP;EACD,CAFD,MAEO,IAAI,CAACD,OAAD,IAAY,CAACC,OAAjB,EAA0B;IAC/B,OAAO,KAAP;EACD,CAFM,MAEA;IACL,OAAOD,OAAO,CAACE,CAAR,KAAcD,OAAO,CAACC,CAAtB,IAA2BF,OAAO,CAACG,CAAR,KAAcF,OAAO,CAACE,CAAxD;EACD;AACF;AACD;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,cAAT,CAAwBP,CAAxB,EAA2BC,CAA3B,EAA8B;EACnC,IAAIO,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoEV,cAAlF;;EAEA,IAAIC,CAAC,CAACU,MAAF,KAAaT,CAAC,CAACS,MAAnB,EAA2B;IACzB,OAAO,KAAP;EACD;;EAED,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,CAAC,CAACU,MAAtB,EAA8B,EAAEE,CAAhC,EAAmC;IACjC,IAAI,CAACJ,OAAO,CAACR,CAAC,CAACY,CAAD,CAAF,EAAOX,CAAC,CAACW,CAAD,CAAR,CAAZ,EAA0B;MACxB,OAAO,KAAP;IACD;EACF;;EAED,OAAO,IAAP;AACD"},"metadata":{},"sourceType":"module"}