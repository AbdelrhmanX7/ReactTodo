{"ast":null,"code":"import { invariant } from '@react-dnd/invariant';\nimport { useRegisteredDragSource } from './useRegisteredDragSource';\nimport { useOptionalFactory } from '../useOptionalFactory';\nimport { useDragSourceMonitor } from './useDragSourceMonitor';\nimport { useDragSourceConnector } from './useDragSourceConnector';\nimport { useCollectedProps } from '../useCollectedProps';\nimport { useConnectDragPreview, useConnectDragSource } from './connectors';\n/**\n * useDragSource hook\n * @param sourceSpec The drag source specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\n\nexport function useDrag(specArg, deps) {\n  var spec = useOptionalFactory(specArg, deps);\n  invariant(spec.item != null, 'item must be defined');\n  invariant(spec.item.type != null, 'item type must be defined');\n  var monitor = useDragSourceMonitor();\n  var connector = useDragSourceConnector(spec.options, spec.previewOptions);\n  useRegisteredDragSource(spec, monitor, connector);\n  return [useCollectedProps(spec.collect, monitor, connector), useConnectDragSource(connector), useConnectDragPreview(connector)];\n}","map":{"version":3,"names":["invariant","useRegisteredDragSource","useOptionalFactory","useDragSourceMonitor","useDragSourceConnector","useCollectedProps","useConnectDragPreview","useConnectDragSource","useDrag","specArg","deps","spec","item","type","monitor","connector","options","previewOptions","collect"],"sources":["E:/Front-End-Challenges/React-Challenges/Completed Challenges/ReactTodo/node_modules/react-dnd-multi-backend/node_modules/react-dnd/dist/esm/hooks/useDrag/useDrag.js"],"sourcesContent":["import { invariant } from '@react-dnd/invariant';\nimport { useRegisteredDragSource } from './useRegisteredDragSource';\nimport { useOptionalFactory } from '../useOptionalFactory';\nimport { useDragSourceMonitor } from './useDragSourceMonitor';\nimport { useDragSourceConnector } from './useDragSourceConnector';\nimport { useCollectedProps } from '../useCollectedProps';\nimport { useConnectDragPreview, useConnectDragSource } from './connectors';\n/**\n * useDragSource hook\n * @param sourceSpec The drag source specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\n\nexport function useDrag(specArg, deps) {\n  var spec = useOptionalFactory(specArg, deps);\n  invariant(spec.item != null, 'item must be defined');\n  invariant(spec.item.type != null, 'item type must be defined');\n  var monitor = useDragSourceMonitor();\n  var connector = useDragSourceConnector(spec.options, spec.previewOptions);\n  useRegisteredDragSource(spec, monitor, connector);\n  return [useCollectedProps(spec.collect, monitor, connector), useConnectDragSource(connector), useConnectDragPreview(connector)];\n}"],"mappings":"AAAA,SAASA,SAAT,QAA0B,sBAA1B;AACA,SAASC,uBAAT,QAAwC,2BAAxC;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,sBAAT,QAAuC,0BAAvC;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,SAASC,qBAAT,EAAgCC,oBAAhC,QAA4D,cAA5D;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,OAAT,CAAiBC,OAAjB,EAA0BC,IAA1B,EAAgC;EACrC,IAAIC,IAAI,GAAGT,kBAAkB,CAACO,OAAD,EAAUC,IAAV,CAA7B;EACAV,SAAS,CAACW,IAAI,CAACC,IAAL,IAAa,IAAd,EAAoB,sBAApB,CAAT;EACAZ,SAAS,CAACW,IAAI,CAACC,IAAL,CAAUC,IAAV,IAAkB,IAAnB,EAAyB,2BAAzB,CAAT;EACA,IAAIC,OAAO,GAAGX,oBAAoB,EAAlC;EACA,IAAIY,SAAS,GAAGX,sBAAsB,CAACO,IAAI,CAACK,OAAN,EAAeL,IAAI,CAACM,cAApB,CAAtC;EACAhB,uBAAuB,CAACU,IAAD,EAAOG,OAAP,EAAgBC,SAAhB,CAAvB;EACA,OAAO,CAACV,iBAAiB,CAACM,IAAI,CAACO,OAAN,EAAeJ,OAAf,EAAwBC,SAAxB,CAAlB,EAAsDR,oBAAoB,CAACQ,SAAD,CAA1E,EAAuFT,qBAAqB,CAACS,SAAD,CAA5G,CAAP;AACD"},"metadata":{},"sourceType":"module"}