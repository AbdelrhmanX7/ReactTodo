{"ast":null,"code":"import _classCallCheck from \"E:/Front-End-Challenges/React-Challenges/Completed Challenges/ReactTodo/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/Front-End-Challenges/React-Challenges/Completed Challenges/ReactTodo/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { createDragDropActions } from '../actions/dragDrop/index.js';\nexport var DragDropManagerImpl = /*#__PURE__*/function () {\n  function DragDropManagerImpl(store, monitor) {\n    var _this = this;\n\n    _classCallCheck(this, DragDropManagerImpl);\n\n    this.isSetUp = false;\n\n    this.handleRefCountChange = function () {\n      var shouldSetUp = _this.store.getState().refCount > 0;\n\n      if (_this.backend) {\n        if (shouldSetUp && !_this.isSetUp) {\n          _this.backend.setup();\n\n          _this.isSetUp = true;\n        } else if (!shouldSetUp && _this.isSetUp) {\n          _this.backend.teardown();\n\n          _this.isSetUp = false;\n        }\n      }\n    };\n\n    this.store = store;\n    this.monitor = monitor;\n    store.subscribe(this.handleRefCountChange);\n  }\n\n  _createClass(DragDropManagerImpl, [{\n    key: \"receiveBackend\",\n    value: function receiveBackend(backend) {\n      this.backend = backend;\n    }\n  }, {\n    key: \"getMonitor\",\n    value: function getMonitor() {\n      return this.monitor;\n    }\n  }, {\n    key: \"getBackend\",\n    value: function getBackend() {\n      return this.backend;\n    }\n  }, {\n    key: \"getRegistry\",\n    value: function getRegistry() {\n      return this.monitor.registry;\n    }\n  }, {\n    key: \"getActions\",\n    value: function getActions() {\n      /* eslint-disable-next-line @typescript-eslint/no-this-alias */\n      var manager = this;\n      var dispatch = this.store.dispatch;\n\n      function bindActionCreator(actionCreator) {\n        return function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          var action = actionCreator.apply(manager, args);\n\n          if (typeof action !== 'undefined') {\n            dispatch(action);\n          }\n        };\n      }\n\n      var actions = createDragDropActions(this);\n      return Object.keys(actions).reduce(function (boundActions, key) {\n        var action = actions[key];\n        boundActions[key] = bindActionCreator(action);\n        return boundActions;\n      }, {});\n    }\n  }, {\n    key: \"dispatch\",\n    value: function dispatch(action) {\n      this.store.dispatch(action);\n    }\n  }]);\n\n  return DragDropManagerImpl;\n}();","map":{"version":3,"mappings":";;AAEA,SAASA,qBAAT,QAAsC,8BAAtC;AAYA,WAAaC,mBAAb;EAMC,6BAAmBC,KAAnB,EAAwCC,OAAxC,EAAkE;IAAA;;IAAA;;IAFlE,KAAQC,OAAR,GAAkB,KAAlB;;IAwDA,KAAQC,oBAAR,GAA+B,YAAY;MAC1C,IAAMC,WAAW,GAAG,KAAI,CAACJ,KAAL,CAAWK,QAAX,GAAsBC,QAAtB,GAAiC,CAArD;;MACA,IAAI,KAAI,CAACC,OAAT,EAAkB;QACjB,IAAIH,WAAW,IAAI,CAAC,KAAI,CAACF,OAAzB,EAAkC;UACjC,KAAI,CAACK,OAAL,CAAaC,KAAb;;UACA,KAAI,CAACN,OAAL,GAAe,IAAf;QACA,CAHD,MAGO,IAAI,CAACE,WAAD,IAAgB,KAAI,CAACF,OAAzB,EAAkC;UACxC,KAAI,CAACK,OAAL,CAAaE,QAAb;;UACA,KAAI,CAACP,OAAL,GAAe,KAAf;QACA;MACD;IACD,CAXD;;IArDC,KAAKF,KAAL,GAAaA,KAAb;IACA,KAAKC,OAAL,GAAeA,OAAf;IACAD,KAAK,CAACU,SAANV,CAAgB,KAAKG,oBAArBH;EACA;;EAVF;IAAA;IAAA,OAYC,wBAAsBO,OAAtB,EAA8C;MAC7C,KAAKA,OAAL,GAAeA,OAAf;IACA;EAdF;IAAA;IAAA,OAgBC,sBAAqC;MACpC,OAAO,KAAKN,OAAZ;IACA;EAlBF;IAAA;IAAA,OAoBC,sBAA6B;MAC5B,OAAO,KAAKM,OAAZ;IACA;EAtBF;IAAA;IAAA,OAwBC,uBAAsC;MACrC,OAAO,KAAMN,OAAN,CAAsCU,QAA7C;IACA;EA1BF;IAAA;IAAA,OA4BC,sBAAqC;MACpC;MACA,IAAMC,OAAO,GAAG,IAAhB;MACA,IAAQC,QAAR,GAAqB,KAAKb,KAA1B,CAAQa,QAAR;;MAEA,SAASC,iBAAT,CAA2BC,aAA3B,EAA8D;QAC7D,OAAO,YAAoB;UAAA,kCAAhBC,IAAgB;YAAhBA,IAAgB;UAAA;;UAC1B,IAAMC,MAAM,GAAGF,aAAa,CAACG,KAAdH,CAAoBH,OAApBG,EAA6BC,IAA7BD,CAAf;;UACA,IAAI,OAAOE,MAAP,KAAkB,WAAtB,EAAmC;YAClCJ,QAAQ,CAACI,MAAD,CAARJ;UACA;QACD,CALD;MAMA;;MAED,IAAMM,OAAO,GAAGrB,qBAAqB,CAAC,IAAD,CAArC;MAEA,OAAOsB,MAAM,CAACC,IAAPD,CAAYD,OAAZC,EAAqBE,MAArBF,CACN,UAACG,YAAD,EAAgCC,GAAhC,EAAgD;QAC/C,IAAMP,MAAM,GAAuBE,OAAQ,CAC1CK,GAD0C,CAA3C;QAGCD,YAAa,CAASC,GAAT,CAAb,GAA6BV,iBAAiB,CAACG,MAAD,CAA9C;QACD,OAAOM,YAAP;MACA,CAPKH,EAQN,EARMA,CAAP;IAUA;EAtDF;IAAA;IAAA,OAwDC,kBAAgBH,MAAhB,EAA2C;MAC1C,KAAKjB,KAAL,CAAWa,QAAX,CAAoBI,MAApB;IACA;EA1DF;;EAAA;AAAA","names":["createDragDropActions","DragDropManagerImpl","store","monitor","isSetUp","handleRefCountChange","shouldSetUp","getState","refCount","backend","setup","teardown","subscribe","registry","manager","dispatch","bindActionCreator","actionCreator","args","action","apply","actions","Object","keys","reduce","boundActions","key"],"sources":["E:\\Front-End-Challenges\\React-Challenges\\Completed Challenges\\ReactTodo\\node_modules\\dnd-core\\src\\classes\\DragDropManagerImpl.ts"],"sourcesContent":["import type { Action, Store } from 'redux'\n\nimport { createDragDropActions } from '../actions/dragDrop/index.js'\nimport type {\n\tActionCreator,\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n} from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport type { DragDropMonitorImpl } from './DragDropMonitorImpl.js'\n\nexport class DragDropManagerImpl implements DragDropManager {\n\tprivate store: Store<State>\n\tprivate monitor: DragDropMonitor\n\tprivate backend: Backend | undefined\n\tprivate isSetUp = false\n\n\tpublic constructor(store: Store<State>, monitor: DragDropMonitor) {\n\t\tthis.store = store\n\t\tthis.monitor = monitor\n\t\tstore.subscribe(this.handleRefCountChange)\n\t}\n\n\tpublic receiveBackend(backend: Backend): void {\n\t\tthis.backend = backend\n\t}\n\n\tpublic getMonitor(): DragDropMonitor {\n\t\treturn this.monitor\n\t}\n\n\tpublic getBackend(): Backend {\n\t\treturn this.backend as Backend\n\t}\n\n\tpublic getRegistry(): HandlerRegistry {\n\t\treturn (this.monitor as DragDropMonitorImpl).registry\n\t}\n\n\tpublic getActions(): DragDropActions {\n\t\t/* eslint-disable-next-line @typescript-eslint/no-this-alias */\n\t\tconst manager = this\n\t\tconst { dispatch } = this.store\n\n\t\tfunction bindActionCreator(actionCreator: ActionCreator<any>) {\n\t\t\treturn (...args: any[]) => {\n\t\t\t\tconst action = actionCreator.apply(manager, args as any)\n\t\t\t\tif (typeof action !== 'undefined') {\n\t\t\t\t\tdispatch(action)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst actions = createDragDropActions(this)\n\n\t\treturn Object.keys(actions).reduce(\n\t\t\t(boundActions: DragDropActions, key: string) => {\n\t\t\t\tconst action: ActionCreator<any> = (actions as any)[\n\t\t\t\t\tkey\n\t\t\t\t] as ActionCreator<any>\n\t\t\t\t;(boundActions as any)[key] = bindActionCreator(action)\n\t\t\t\treturn boundActions\n\t\t\t},\n\t\t\t{} as DragDropActions,\n\t\t)\n\t}\n\n\tpublic dispatch(action: Action<any>): void {\n\t\tthis.store.dispatch(action)\n\t}\n\n\tprivate handleRefCountChange = (): void => {\n\t\tconst shouldSetUp = this.store.getState().refCount > 0\n\t\tif (this.backend) {\n\t\t\tif (shouldSetUp && !this.isSetUp) {\n\t\t\t\tthis.backend.setup()\n\t\t\t\tthis.isSetUp = true\n\t\t\t} else if (!shouldSetUp && this.isSetUp) {\n\t\t\t\tthis.backend.teardown()\n\t\t\t\tthis.isSetUp = false\n\t\t\t}\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}