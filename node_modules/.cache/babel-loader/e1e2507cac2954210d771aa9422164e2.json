{"ast":null,"code":"import _classCallCheck from \"E:/Front-End-Challenges/React-Challenges/Completed Challenges/ReactTodo/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/Front-End-Challenges/React-Challenges/Completed Challenges/ReactTodo/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n// `call`, just like a function.\nexport var RawTask = /*#__PURE__*/function () {\n  function RawTask(onError, release) {\n    _classCallCheck(this, RawTask);\n\n    this.onError = onError;\n    this.release = release;\n    this.task = null;\n  }\n\n  _createClass(RawTask, [{\n    key: \"call\",\n    value: function call() {\n      try {\n        this.task && this.task();\n      } catch (error) {\n        this.onError(error);\n      } finally {\n        this.task = null;\n        this.release(this);\n      }\n    }\n  }]);\n\n  return RawTask;\n}();","map":{"version":3,"mappings":";;AAIA;AACA,WAAaA,OAAb;EAGC,iBACSC,OADT,EAESC,OAFT,EAGE;IAAA;;SAFOD;SACAC;SAJFC,OAAsB;EAKzB;;EANL;IAAA;IAAA,OAQC,gBAAc;MACb,IAAI;QACH,KAAKA,IAAL,IAAa,KAAKA,IAAL,EAAb;MACA,CAFD,CAEE,OAAOC,KAAP,EAAc;QACf,KAAKH,OAAL,CAAaG,KAAb;MACA,CAJD,SAIU;QACT,KAAKD,IAAL,GAAY,IAAZ;QACA,KAAKD,OAAL,CAAa,IAAb;MACA;IACD;EAjBF;;EAAA;AAAA","names":["RawTask","onError","release","task","error"],"sources":["E:\\Front-End-Challenges\\React-Challenges\\Completed Challenges\\ReactTodo\\node_modules\\@react-dnd\\asap\\src\\RawTask.ts"],"sourcesContent":["// We wrap tasks with recyclable task objects.  A task object implements\n\nimport type { Task, TaskFn } from 'types'\n\n// `call`, just like a function.\nexport class RawTask implements Task {\n\tpublic task: TaskFn | null = null\n\n\tpublic constructor(\n\t\tprivate onError: (err: any) => void,\n\t\tprivate release: (t: RawTask) => void,\n\t) {}\n\n\tpublic call() {\n\t\ttry {\n\t\t\tthis.task && this.task()\n\t\t} catch (error) {\n\t\t\tthis.onError(error)\n\t\t} finally {\n\t\t\tthis.task = null\n\t\t\tthis.release(this)\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}