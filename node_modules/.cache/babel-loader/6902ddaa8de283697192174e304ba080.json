{"ast":null,"code":"import { useMonitorOutput } from './useMonitorOutput.js';\nexport function useCollectedProps(collector, monitor, connector) {\n  return useMonitorOutput(monitor, collector || function () {\n    return {};\n  }, function () {\n    return connector.reconnect();\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,gBAAT,QAAiC,uBAAjC;AAEA,OAAO,SAASC,iBAAT,CACNC,SADM,EAENC,OAFM,EAGNC,SAHM,EAIL;EACD,OAAOJ,gBAAgB,CAACG,OAAD,EAAUD,SAAS,IAAK;IAAA,OAAO,EAAP;EAAA,CAAxB,EAAkD;IAAA,OACxEE,SAAS,CAACC,SAAVD,EADwE;EAAA,CAAlD,CAAvB;AAGA","names":["useMonitorOutput","useCollectedProps","collector","monitor","connector","reconnect"],"sources":["E:\\Front-End-Challenges\\React-Challenges\\Completed Challenges\\ReactTodo\\node_modules\\react-dnd\\src\\hooks\\useCollectedProps.ts"],"sourcesContent":["import type { Connector } from '../internals/index.js'\nimport type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useMonitorOutput } from './useMonitorOutput.js'\n\nexport function useCollectedProps<Collected, Monitor extends HandlerManager>(\n\tcollector: ((monitor: Monitor) => Collected) | undefined,\n\tmonitor: Monitor & MonitorEventEmitter,\n\tconnector: Connector,\n) {\n\treturn useMonitorOutput(monitor, collector || (() => ({} as Collected)), () =>\n\t\tconnector.reconnect(),\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}