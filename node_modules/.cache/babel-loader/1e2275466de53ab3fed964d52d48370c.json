{"ast":null,"code":"import { intersection } from './js_utils';\nexport var NONE = [];\nexport var ALL = [];\nNONE.__IS_NONE__ = true;\nALL.__IS_ALL__ = true;\n/**\n * Determines if the given handler IDs are dirty or not.\n *\n * @param dirtyIds The set of dirty handler ids\n * @param handlerIds The set of handler ids to check\n */\n\nexport function areDirty(dirtyIds, handlerIds) {\n  if (dirtyIds === NONE) {\n    return false;\n  }\n\n  if (dirtyIds === ALL || typeof handlerIds === 'undefined') {\n    return true;\n  }\n\n  var commonIds = intersection(handlerIds, dirtyIds);\n  return commonIds.length > 0;\n}","map":{"version":3,"names":["intersection","NONE","ALL","__IS_NONE__","__IS_ALL__","areDirty","dirtyIds","handlerIds","commonIds","length"],"sources":["E:/Front-End-Challenges/React-Challenges/Completed Challenges/ReactTodo/node_modules/react-dnd-multi-backend/node_modules/dnd-core/dist/esm/utils/dirtiness.js"],"sourcesContent":["import { intersection } from './js_utils';\nexport var NONE = [];\nexport var ALL = [];\nNONE.__IS_NONE__ = true;\nALL.__IS_ALL__ = true;\n/**\n * Determines if the given handler IDs are dirty or not.\n *\n * @param dirtyIds The set of dirty handler ids\n * @param handlerIds The set of handler ids to check\n */\n\nexport function areDirty(dirtyIds, handlerIds) {\n  if (dirtyIds === NONE) {\n    return false;\n  }\n\n  if (dirtyIds === ALL || typeof handlerIds === 'undefined') {\n    return true;\n  }\n\n  var commonIds = intersection(handlerIds, dirtyIds);\n  return commonIds.length > 0;\n}"],"mappings":"AAAA,SAASA,YAAT,QAA6B,YAA7B;AACA,OAAO,IAAIC,IAAI,GAAG,EAAX;AACP,OAAO,IAAIC,GAAG,GAAG,EAAV;AACPD,IAAI,CAACE,WAAL,GAAmB,IAAnB;AACAD,GAAG,CAACE,UAAJ,GAAiB,IAAjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,QAAT,CAAkBC,QAAlB,EAA4BC,UAA5B,EAAwC;EAC7C,IAAID,QAAQ,KAAKL,IAAjB,EAAuB;IACrB,OAAO,KAAP;EACD;;EAED,IAAIK,QAAQ,KAAKJ,GAAb,IAAoB,OAAOK,UAAP,KAAsB,WAA9C,EAA2D;IACzD,OAAO,IAAP;EACD;;EAED,IAAIC,SAAS,GAAGR,YAAY,CAACO,UAAD,EAAaD,QAAb,CAA5B;EACA,OAAOE,SAAS,CAACC,MAAV,GAAmB,CAA1B;AACD"},"metadata":{},"sourceType":"module"}