{"ast":null,"code":"var _jsxFileName = \"E:\\\\Front-End-Challenges\\\\React-Challenges\\\\ReactTodo\\\\src\\\\components\\\\TodoList\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport \"./../UI/Todo.css\";\nimport TodoResults from \"./TodoResults\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = props => {\n  _s();\n\n  const [cards, setCards] = useState(props.Data);\n  const findCard = useCallback(id => {\n    const card = cards.filter(c => `${c.id}`);\n  });\n  const btns = document.getElementsByClassName(\"Checked-btns\");\n  const [checkState, setCheckState] = useState(\"All\");\n  const [Datalen, setDataLen] = useState(0);\n\n  const CheckLen = () => {\n    const GetLen = props.Data.filter(el => {\n      return el.state === \"Complete\";\n    });\n    setDataLen(GetLen.length);\n  };\n\n  const onAll = e => {\n    for (let i = 0; i < btns.length; i++) {\n      btns[i].style.color = 'hsl(236, 9%, 61%)';\n    }\n\n    btns[0].style.color = 'hsl(220, 98%, 61%)';\n    setCheckState(\"All\");\n  };\n\n  const onActive = () => {\n    for (let i = 0; i < btns.length; i++) {\n      btns[i].style.color = 'hsl(236, 9%, 61%)';\n    }\n\n    btns[1].style.color = 'hsl(220, 98%, 61%)';\n    setCheckState(\"Active\");\n  };\n\n  const onComplete = () => {\n    for (let i = 0; i < btns.length; i++) {\n      btns[i].style.color = 'hsl(236, 9%, 61%)';\n    }\n\n    btns[2].style.color = 'hsl(220, 98%, 61%)';\n    setCheckState(\"Complete\");\n  };\n\n  const onClear = () => {\n    setDataLen(0);\n    props.onClearComplete();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"UserResults\",\n    children: [props.Data.length === 0 ? /*#__PURE__*/_jsxDEV(TodoResults, {\n      value: \"There are Nothing Here\",\n      id: \"arsa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : checkState === \"All\" ? props.Data.map(el => {\n      return /*#__PURE__*/_jsxDEV(TodoResults, {\n        value: el.value,\n        state: el.state,\n        id: el.id,\n        checkState: props.onCheckState,\n        CheckLen: CheckLen,\n        Delete: props.onDelete\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this);\n    }) : checkState === \"Active\" ? props.Data.map(el => {\n      return el.state === \"Active\" ? /*#__PURE__*/_jsxDEV(TodoResults, {\n        value: el.value,\n        state: el.state,\n        id: el.id,\n        checkState: props.onCheckState,\n        CheckLen: CheckLen,\n        Delete: props.onDelete\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }, this) : console.log(\"Error\");\n    }) : checkState === \"Complete\" ? props.Data.map(el => {\n      return el.state === \"Complete\" ? /*#__PURE__*/_jsxDEV(TodoResults, {\n        value: el.value,\n        state: el.state,\n        id: el.id,\n        checkState: props.onCheckState,\n        CheckLen: CheckLen,\n        Delete: props.onDelete\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }, this) : console.log(\"Error\");\n    }) : console.log(\"Error\"), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"active-states\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [props.Data.length - Datalen, \" items left\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"check-btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Checked-btns\",\n          onClick: onAll,\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Checked-btns\",\n          onClick: onActive,\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Checked-btns\",\n          onClick: onComplete,\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClear,\n        children: \"Clear Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoList, \"lTkpaGGdiSwJm7OQa+BfeOZezUg=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["E:/Front-End-Challenges/React-Challenges/ReactTodo/src/components/TodoList/TodoList.js"],"names":["useCallback","useState","TodoResults","TodoList","props","cards","setCards","Data","findCard","id","card","filter","c","btns","document","getElementsByClassName","checkState","setCheckState","Datalen","setDataLen","CheckLen","GetLen","el","state","length","onAll","e","i","style","color","onActive","onComplete","onClear","onClearComplete","map","value","onCheckState","onDelete","console","log"],"mappings":"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","sourcesContent":["import { useCallback, useState } from \"react\";\r\nimport \"./../UI/Todo.css\";\r\nimport TodoResults from \"./TodoResults\";\r\nconst TodoList = (props) => {\r\n  const [cards, setCards] = useState(props.Data)\r\n  const findCard = useCallback((id) => {\r\n    const card = cards.filter((c) => `${c.id}`)\r\n  })\r\n  const btns = document.getElementsByClassName(\"Checked-btns\");\r\n  const [checkState, setCheckState] = useState(\"All\");\r\n  const [Datalen, setDataLen] = useState(0);\r\n  const CheckLen = () => {\r\n    const GetLen = props.Data.filter((el) => {\r\n      return el.state === \"Complete\";\r\n    });\r\n    setDataLen(GetLen.length);\r\n  };\r\n\r\n  const onAll = (e) => {\r\n    for(let i = 0; i < btns.length; i++) {\r\n      btns[i].style.color = 'hsl(236, 9%, 61%)'\r\n    }\r\n    btns[0].style.color = 'hsl(220, 98%, 61%)'\r\n    setCheckState(\"All\");\r\n  };\r\n\r\n  const onActive = () => {\r\n    for(let i = 0; i < btns.length; i++) {\r\n      btns[i].style.color = 'hsl(236, 9%, 61%)'\r\n    }\r\n    btns[1].style.color = 'hsl(220, 98%, 61%)'\r\n    setCheckState(\"Active\");\r\n  };\r\n  const onComplete = () => {\r\n    for(let i = 0; i < btns.length; i++) {\r\n      btns[i].style.color = 'hsl(236, 9%, 61%)'\r\n    }\r\n    btns[2].style.color = 'hsl(220, 98%, 61%)'\r\n    setCheckState(\"Complete\");\r\n  };\r\n  const onClear = () =>{\r\n    setDataLen(0)\r\n    props.onClearComplete()\r\n  }\r\n  return (\r\n    <ul className=\"UserResults\">\r\n      {props.Data.length === 0 ? (\r\n        <TodoResults value={\"There are Nothing Here\"} id={\"arsa\"} />\r\n      ) : checkState === \"All\" ? (\r\n        props.Data.map((el) => {\r\n          return (\r\n            <TodoResults\r\n              value={el.value}\r\n              state={el.state}\r\n              id={el.id}\r\n              key={el.id}\r\n              checkState={props.onCheckState}\r\n              CheckLen={CheckLen}\r\n              Delete={props.onDelete}\r\n            />\r\n          );\r\n        })\r\n      ) : checkState === \"Active\" ? (\r\n        (\r\n          props.Data.map((el) => {\r\n            return el.state === \"Active\" ? (\r\n              <TodoResults\r\n                value={el.value}\r\n                state={el.state}\r\n                id={el.id}\r\n                key={el.id}\r\n                checkState={props.onCheckState}\r\n                CheckLen={CheckLen}\r\n                Delete={props.onDelete}\r\n              />\r\n            ) : (\r\n              console.log(\"Error\")\r\n            );\r\n          })\r\n        )\r\n      ) : checkState === \"Complete\" ? (\r\n        (\r\n          props.Data.map((el) => {\r\n            return el.state === \"Complete\" ? (\r\n              <TodoResults\r\n                value={el.value}\r\n                state={el.state}\r\n                id={el.id}\r\n                key={el.id}\r\n                checkState={props.onCheckState}\r\n                CheckLen={CheckLen}\r\n                Delete={props.onDelete}\r\n              />\r\n            ) : (\r\n              console.log(\"Error\")\r\n            );\r\n          })\r\n        )\r\n      ) : (\r\n        console.log(\"Error\")\r\n      )}\r\n      <div className=\"active-states\">\r\n        <p>{props.Data.length - Datalen} items left</p>\r\n        <div className=\"check-btns\">\r\n          <button className=\"Checked-btns\" onClick={onAll}>\r\n            All\r\n          </button>\r\n          <button className=\"Checked-btns\" onClick={onActive}>\r\n            Active\r\n          </button>\r\n          <button className=\"Checked-btns\" onClick={onComplete}>\r\n            Completed\r\n          </button>\r\n        </div>\r\n        <button onClick={onClear}>Clear Completed</button>\r\n      </div>\r\n    </ul>\r\n  );\r\n};\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}