{"ast":null,"code":"import { useMemo } from 'react';\nimport { SourceConnector } from '../../internals/index.js';\nimport { useDragDropManager } from '../useDragDropManager.js';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js';\nexport function useDragSourceConnector(dragSourceOptions, dragPreviewOptions) {\n  var manager = useDragDropManager();\n  var connector = useMemo(function () {\n    return new SourceConnector(manager.getBackend());\n  }, [manager]);\n  useIsomorphicLayoutEffect(function () {\n    connector.dragSourceOptions = dragSourceOptions || null;\n    connector.reconnect();\n    return function () {\n      return connector.disconnectDragSource();\n    };\n  }, [connector, dragSourceOptions]);\n  useIsomorphicLayoutEffect(function () {\n    connector.dragPreviewOptions = dragPreviewOptions || null;\n    connector.reconnect();\n    return function () {\n      return connector.disconnectDragPreview();\n    };\n  }, [connector, dragPreviewOptions]);\n  return connector;\n}","map":{"version":3,"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AAEA,SAASC,eAAT,QAAgC,0BAAhC;AAKA,SAASC,kBAAT,QAAmC,0BAAnC;AACA,SAASC,yBAAT,QAA0C,iCAA1C;AAEA,OAAO,SAASC,sBAAT,CACNC,iBADM,EAENC,kBAFM,EAGY;EAClB,IAAMC,OAAO,GAAGL,kBAAkB,EAAlC;EACA,IAAMM,SAAS,GAAGR,OAAO,CACxB;IAAA,OAAM,IAAIC,eAAJ,CAAoBM,OAAO,CAACE,UAARF,EAApB,CAAN;EAAA,CADwB,EAExB,CAACA,OAAD,CAFwB,CAAzB;EAIAJ,yBAAyB,CAAC,YAAM;IAC/BK,SAAS,CAACH,iBAAVG,GAA8BH,iBAAiB,IAAI,IAAnDG;IACAA,SAAS,CAACE,SAAVF;IACA,OAAO;MAAA,OAAMA,SAAS,CAACG,oBAAVH,EAAN;IAAA,CAAP;EACA,CAJwB,EAItB,CAACA,SAAD,EAAYH,iBAAZ,CAJsB,CAAzBF;EAKAA,yBAAyB,CAAC,YAAM;IAC/BK,SAAS,CAACF,kBAAVE,GAA+BF,kBAAkB,IAAI,IAArDE;IACAA,SAAS,CAACE,SAAVF;IACA,OAAO;MAAA,OAAMA,SAAS,CAACI,qBAAVJ,EAAN;IAAA,CAAP;EACA,CAJwB,EAItB,CAACA,SAAD,EAAYF,kBAAZ,CAJsB,CAAzBH;EAKA,OAAOK,SAAP;AACA","names":["useMemo","SourceConnector","useDragDropManager","useIsomorphicLayoutEffect","useDragSourceConnector","dragSourceOptions","dragPreviewOptions","manager","connector","getBackend","reconnect","disconnectDragSource","disconnectDragPreview"],"sources":["E:\\Front-End-Challenges\\React-Challenges\\Completed Challenges\\ReactTodo\\node_modules\\react-dnd\\src\\hooks\\useDrag\\useDragSourceConnector.ts"],"sourcesContent":["import { useMemo } from 'react'\n\nimport { SourceConnector } from '../../internals/index.js'\nimport type {\n\tDragPreviewOptions,\n\tDragSourceOptions,\n} from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDragSourceConnector(\n\tdragSourceOptions: DragSourceOptions | undefined,\n\tdragPreviewOptions: DragPreviewOptions | undefined,\n): SourceConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new SourceConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragSourceOptions = dragSourceOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragSource()\n\t}, [connector, dragSourceOptions])\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragPreviewOptions = dragPreviewOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragPreview()\n\t}, [connector, dragPreviewOptions])\n\treturn connector\n}\n"]},"metadata":{},"sourceType":"module"}