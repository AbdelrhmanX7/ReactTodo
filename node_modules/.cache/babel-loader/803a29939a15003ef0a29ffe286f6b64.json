{"ast":null,"code":"import _classCallCheck from \"E:/Front-End-Challenges/React-Challenges/Completed Challenges/ReactTodo/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/Front-End-Challenges/React-Challenges/Completed Challenges/ReactTodo/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { invariant } from '@react-dnd/invariant';\nvar isCallingCanDrop = false;\nexport var DropTargetMonitorImpl = /*#__PURE__*/function () {\n  function DropTargetMonitorImpl(manager) {\n    _classCallCheck(this, DropTargetMonitorImpl);\n\n    this.targetId = null;\n    this.internalMonitor = manager.getMonitor();\n  }\n\n  _createClass(DropTargetMonitorImpl, [{\n    key: \"receiveHandlerId\",\n    value: function receiveHandlerId(targetId) {\n      this.targetId = targetId;\n    }\n  }, {\n    key: \"getHandlerId\",\n    value: function getHandlerId() {\n      return this.targetId;\n    }\n  }, {\n    key: \"subscribeToStateChange\",\n    value: function subscribeToStateChange(listener, options) {\n      return this.internalMonitor.subscribeToStateChange(listener, options);\n    }\n  }, {\n    key: \"canDrop\",\n    value: function canDrop() {\n      // Cut out early if the target id has not been set. This should prevent errors\n      // where the user has an older version of dnd-core like in\n      // https://github.com/react-dnd/react-dnd/issues/1310\n      if (!this.targetId) {\n        return false;\n      }\n\n      invariant(!isCallingCanDrop, 'You may not call monitor.canDrop() inside your canDrop() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor');\n\n      try {\n        isCallingCanDrop = true;\n        return this.internalMonitor.canDropOnTarget(this.targetId);\n      } finally {\n        isCallingCanDrop = false;\n      }\n    }\n  }, {\n    key: \"isOver\",\n    value: function isOver(options) {\n      if (!this.targetId) {\n        return false;\n      }\n\n      return this.internalMonitor.isOverTarget(this.targetId, options);\n    }\n  }, {\n    key: \"getItemType\",\n    value: function getItemType() {\n      return this.internalMonitor.getItemType();\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem() {\n      return this.internalMonitor.getItem();\n    }\n  }, {\n    key: \"getDropResult\",\n    value: function getDropResult() {\n      return this.internalMonitor.getDropResult();\n    }\n  }, {\n    key: \"didDrop\",\n    value: function didDrop() {\n      return this.internalMonitor.didDrop();\n    }\n  }, {\n    key: \"getInitialClientOffset\",\n    value: function getInitialClientOffset() {\n      return this.internalMonitor.getInitialClientOffset();\n    }\n  }, {\n    key: \"getInitialSourceClientOffset\",\n    value: function getInitialSourceClientOffset() {\n      return this.internalMonitor.getInitialSourceClientOffset();\n    }\n  }, {\n    key: \"getSourceClientOffset\",\n    value: function getSourceClientOffset() {\n      return this.internalMonitor.getSourceClientOffset();\n    }\n  }, {\n    key: \"getClientOffset\",\n    value: function getClientOffset() {\n      return this.internalMonitor.getClientOffset();\n    }\n  }, {\n    key: \"getDifferenceFromInitialOffset\",\n    value: function getDifferenceFromInitialOffset() {\n      return this.internalMonitor.getDifferenceFromInitialOffset();\n    }\n  }]);\n\n  return DropTargetMonitorImpl;\n}();","map":{"version":3,"mappings":";;AAAA,SAASA,SAAT,QAA0B,sBAA1B;AAYA,IAAIC,gBAAgB,GAAG,KAAvB;AAEA,WAAaC,qBAAb;EAIC,+BAAmBC,OAAnB,EAA6C;IAAA;;IAF7C,KAAQC,QAAR,GAAsC,IAAtC;IAGC,KAAKC,eAAL,GAAuBF,OAAO,CAACG,UAARH,EAAvB;EACA;;EANF;IAAA;IAAA,OAQC,0BAAwBC,QAAxB,EAA2D;MAC1D,KAAKA,QAAL,GAAgBA,QAAhB;IACA;EAVF;IAAA;IAAA,OAYC,wBAAyC;MACxC,OAAO,KAAKA,QAAZ;IACA;EAdF;IAAA;IAAA,OAgBC,gCACCG,QADD,EAECC,OAFD,EAGe;MACd,OAAO,KAAKH,eAAL,CAAqBI,sBAArB,CAA4CF,QAA5C,EAAsDC,OAAtD,CAAP;IACA;EArBF;IAAA;IAAA,OAuBC,mBAA0B;MACzB;MACA;MACA;MACA,IAAI,CAAC,KAAKJ,QAAV,EAAoB;QACnB,OAAO,KAAP;MACA;;MACDJ,SAAS,CACR,CAACC,gBADO,EAER,8EACC,8EAHO,CAATD;;MAMA,IAAI;QACHC,gBAAgB,GAAG,IAAnBA;QACA,OAAO,KAAKI,eAAL,CAAqBK,eAArB,CAAqC,KAAKN,QAA1C,CAAP;MACA,CAHD,SAGU;QACTH,gBAAgB,GAAG,KAAnBA;MACA;IACD;EA1CF;IAAA;IAAA,OA4CC,gBAAcO,OAAd,EAAwD;MACvD,IAAI,CAAC,KAAKJ,QAAV,EAAoB;QACnB,OAAO,KAAP;MACA;;MACD,OAAO,KAAKC,eAAL,CAAqBM,YAArB,CAAkC,KAAKP,QAAvC,EAAiDI,OAAjD,CAAP;IACA;EAjDF;IAAA;IAAA,OAmDC,uBAAwC;MACvC,OAAO,KAAKH,eAAL,CAAqBO,WAArB,EAAP;IACA;EArDF;IAAA;IAAA,OAuDC,mBAAsB;MACrB,OAAO,KAAKP,eAAL,CAAqBQ,OAArB,EAAP;IACA;EAzDF;IAAA;IAAA,OA2DC,yBAA4B;MAC3B,OAAO,KAAKR,eAAL,CAAqBS,aAArB,EAAP;IACA;EA7DF;IAAA;IAAA,OA+DC,mBAA0B;MACzB,OAAO,KAAKT,eAAL,CAAqBU,OAArB,EAAP;IACA;EAjEF;IAAA;IAAA,OAmEC,kCAAgD;MAC/C,OAAO,KAAKV,eAAL,CAAqBW,sBAArB,EAAP;IACA;EArEF;IAAA;IAAA,OAuEC,wCAAsD;MACrD,OAAO,KAAKX,eAAL,CAAqBY,4BAArB,EAAP;IACA;EAzEF;IAAA;IAAA,OA2EC,iCAA+C;MAC9C,OAAO,KAAKZ,eAAL,CAAqBa,qBAArB,EAAP;IACA;EA7EF;IAAA;IAAA,OA+EC,2BAAyC;MACxC,OAAO,KAAKb,eAAL,CAAqBc,eAArB,EAAP;IACA;EAjFF;IAAA;IAAA,OAmFC,0CAAwD;MACvD,OAAO,KAAKd,eAAL,CAAqBe,8BAArB,EAAP;IACA;EArFF;;EAAA;AAAA","names":["invariant","isCallingCanDrop","DropTargetMonitorImpl","manager","targetId","internalMonitor","getMonitor","listener","options","subscribeToStateChange","canDropOnTarget","isOverTarget","getItemType","getItem","getDropResult","didDrop","getInitialClientOffset","getInitialSourceClientOffset","getSourceClientOffset","getClientOffset","getDifferenceFromInitialOffset"],"sources":["E:\\Front-End-Challenges\\React-Challenges\\Completed Challenges\\ReactTodo\\node_modules\\react-dnd\\src\\internals\\DropTargetMonitorImpl.ts"],"sourcesContent":["import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../types/index.js'\n\nlet isCallingCanDrop = false\n\nexport class DropTargetMonitorImpl implements DropTargetMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate targetId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(targetId: Identifier | null): void {\n\t\tthis.targetId = targetId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.targetId\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic canDrop(): boolean {\n\t\t// Cut out early if the target id has not been set. This should prevent errors\n\t\t// where the user has an older version of dnd-core like in\n\t\t// https://github.com/react-dnd/react-dnd/issues/1310\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingCanDrop,\n\t\t\t'You may not call monitor.canDrop() inside your canDrop() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrop = true\n\t\t\treturn this.internalMonitor.canDropOnTarget(this.targetId)\n\t\t} finally {\n\t\t\tisCallingCanDrop = false\n\t\t}\n\t}\n\n\tpublic isOver(options?: { shallow?: boolean }): boolean {\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\treturn this.internalMonitor.isOverTarget(this.targetId, options)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}