{"ast":null,"code":"import { invariant } from '@react-dnd/invariant';\nimport { TargetConnector, DropTargetMonitorImpl, registerTarget } from '../internals';\nimport { isPlainObject, isValidType } from './utils';\nimport { checkDecoratorArguments } from './utils';\nimport { decorateHandler } from './decorateHandler';\nimport { createTargetFactory } from './createTargetFactory';\n/**\n * @param type The accepted target type\n * @param spec The DropTarget specification\n * @param collect The props collector function\n * @param options Options\n */\n\nexport function DropTarget(type, spec, collect) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  checkDecoratorArguments('DropTarget', 'type, spec, collect[, options]', type, spec, collect, options);\n  var getType = type;\n\n  if (typeof type !== 'function') {\n    invariant(isValidType(type, true), 'Expected \"type\" provided as the first argument to DropTarget to be ' + 'a string, an array of strings, or a function that returns either given ' + 'the current props. Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', type);\n\n    getType = function getType() {\n      return type;\n    };\n  }\n\n  invariant(isPlainObject(spec), 'Expected \"spec\" provided as the second argument to DropTarget to be ' + 'a plain object. Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', spec);\n  var createTarget = createTargetFactory(spec);\n  invariant(typeof collect === 'function', 'Expected \"collect\" provided as the third argument to DropTarget to be ' + 'a function that returns a plain object of props to inject. ' + 'Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', collect);\n  invariant(isPlainObject(options), 'Expected \"options\" provided as the fourth argument to DropTarget to be ' + 'a plain object when specified. ' + 'Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', collect);\n  return function decorateTarget(DecoratedComponent) {\n    return decorateHandler({\n      containerDisplayName: 'DropTarget',\n      createHandler: createTarget,\n      registerHandler: registerTarget,\n      createMonitor: function createMonitor(manager) {\n        return new DropTargetMonitorImpl(manager);\n      },\n      createConnector: function createConnector(backend) {\n        return new TargetConnector(backend);\n      },\n      DecoratedComponent: DecoratedComponent,\n      getType: getType,\n      collect: collect,\n      options: options\n    });\n  };\n}","map":{"version":3,"names":["invariant","TargetConnector","DropTargetMonitorImpl","registerTarget","isPlainObject","isValidType","checkDecoratorArguments","decorateHandler","createTargetFactory","DropTarget","type","spec","collect","options","arguments","length","undefined","getType","createTarget","decorateTarget","DecoratedComponent","containerDisplayName","createHandler","registerHandler","createMonitor","manager","createConnector","backend"],"sources":["E:/Front-End-Challenges/React-Challenges/Completed Challenges/ReactTodo/node_modules/react-dnd-multi-backend/node_modules/react-dnd/dist/esm/decorators/DropTarget.js"],"sourcesContent":["import { invariant } from '@react-dnd/invariant';\nimport { TargetConnector, DropTargetMonitorImpl, registerTarget } from '../internals';\nimport { isPlainObject, isValidType } from './utils';\nimport { checkDecoratorArguments } from './utils';\nimport { decorateHandler } from './decorateHandler';\nimport { createTargetFactory } from './createTargetFactory';\n/**\n * @param type The accepted target type\n * @param spec The DropTarget specification\n * @param collect The props collector function\n * @param options Options\n */\n\nexport function DropTarget(type, spec, collect) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  checkDecoratorArguments('DropTarget', 'type, spec, collect[, options]', type, spec, collect, options);\n  var getType = type;\n\n  if (typeof type !== 'function') {\n    invariant(isValidType(type, true), 'Expected \"type\" provided as the first argument to DropTarget to be ' + 'a string, an array of strings, or a function that returns either given ' + 'the current props. Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', type);\n\n    getType = function getType() {\n      return type;\n    };\n  }\n\n  invariant(isPlainObject(spec), 'Expected \"spec\" provided as the second argument to DropTarget to be ' + 'a plain object. Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', spec);\n  var createTarget = createTargetFactory(spec);\n  invariant(typeof collect === 'function', 'Expected \"collect\" provided as the third argument to DropTarget to be ' + 'a function that returns a plain object of props to inject. ' + 'Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', collect);\n  invariant(isPlainObject(options), 'Expected \"options\" provided as the fourth argument to DropTarget to be ' + 'a plain object when specified. ' + 'Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', collect);\n  return function decorateTarget(DecoratedComponent) {\n    return decorateHandler({\n      containerDisplayName: 'DropTarget',\n      createHandler: createTarget,\n      registerHandler: registerTarget,\n      createMonitor: function createMonitor(manager) {\n        return new DropTargetMonitorImpl(manager);\n      },\n      createConnector: function createConnector(backend) {\n        return new TargetConnector(backend);\n      },\n      DecoratedComponent: DecoratedComponent,\n      getType: getType,\n      collect: collect,\n      options: options\n    });\n  };\n}"],"mappings":"AAAA,SAASA,SAAT,QAA0B,sBAA1B;AACA,SAASC,eAAT,EAA0BC,qBAA1B,EAAiDC,cAAjD,QAAuE,cAAvE;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,SAA3C;AACA,SAASC,uBAAT,QAAwC,SAAxC;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,OAAhC,EAAyC;EAC9C,IAAIC,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;EACAR,uBAAuB,CAAC,YAAD,EAAe,gCAAf,EAAiDI,IAAjD,EAAuDC,IAAvD,EAA6DC,OAA7D,EAAsEC,OAAtE,CAAvB;EACA,IAAII,OAAO,GAAGP,IAAd;;EAEA,IAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgC;IAC9BV,SAAS,CAACK,WAAW,CAACK,IAAD,EAAO,IAAP,CAAZ,EAA0B,wEAAwE,yEAAxE,GAAoJ,2CAApJ,GAAkM,sEAA5N,EAAoSA,IAApS,CAAT;;IAEAO,OAAO,GAAG,SAASA,OAAT,GAAmB;MAC3B,OAAOP,IAAP;IACD,CAFD;EAGD;;EAEDV,SAAS,CAACI,aAAa,CAACO,IAAD,CAAd,EAAsB,yEAAyE,wCAAzE,GAAoH,sEAA1I,EAAkNA,IAAlN,CAAT;EACA,IAAIO,YAAY,GAAGV,mBAAmB,CAACG,IAAD,CAAtC;EACAX,SAAS,CAAC,OAAOY,OAAP,KAAmB,UAApB,EAAgC,2EAA2E,6DAA3E,GAA2I,wBAA3I,GAAsK,sEAAtM,EAA8QA,OAA9Q,CAAT;EACAZ,SAAS,CAACI,aAAa,CAACS,OAAD,CAAd,EAAyB,4EAA4E,iCAA5E,GAAgH,wBAAhH,GAA2I,sEAApK,EAA4OD,OAA5O,CAAT;EACA,OAAO,SAASO,cAAT,CAAwBC,kBAAxB,EAA4C;IACjD,OAAOb,eAAe,CAAC;MACrBc,oBAAoB,EAAE,YADD;MAErBC,aAAa,EAAEJ,YAFM;MAGrBK,eAAe,EAAEpB,cAHI;MAIrBqB,aAAa,EAAE,SAASA,aAAT,CAAuBC,OAAvB,EAAgC;QAC7C,OAAO,IAAIvB,qBAAJ,CAA0BuB,OAA1B,CAAP;MACD,CANoB;MAOrBC,eAAe,EAAE,SAASA,eAAT,CAAyBC,OAAzB,EAAkC;QACjD,OAAO,IAAI1B,eAAJ,CAAoB0B,OAApB,CAAP;MACD,CAToB;MAUrBP,kBAAkB,EAAEA,kBAVC;MAWrBH,OAAO,EAAEA,OAXY;MAYrBL,OAAO,EAAEA,OAZY;MAarBC,OAAO,EAAEA;IAbY,CAAD,CAAtB;EAeD,CAhBD;AAiBD"},"metadata":{},"sourceType":"module"}