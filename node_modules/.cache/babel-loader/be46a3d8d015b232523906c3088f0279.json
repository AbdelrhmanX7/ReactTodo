{"ast":null,"code":"import _classCallCheck from \"E:/Front-End-Challenges/React-Challenges/Completed Challenges/ReactTodo/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/Front-End-Challenges/React-Challenges/Completed Challenges/ReactTodo/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nexport var DragSourceImpl = /*#__PURE__*/function () {\n  function DragSourceImpl(spec, monitor, connector) {\n    _classCallCheck(this, DragSourceImpl);\n\n    this.spec = spec;\n    this.monitor = monitor;\n    this.connector = connector;\n  }\n\n  _createClass(DragSourceImpl, [{\n    key: \"beginDrag\",\n    value: function beginDrag() {\n      var spec = this.spec;\n      var monitor = this.monitor;\n      var result = null;\n\n      if (typeof spec.item === 'object') {\n        result = spec.item;\n      } else if (typeof spec.item === 'function') {\n        result = spec.item(monitor);\n      } else {\n        result = {};\n      }\n\n      return result !== null && result !== void 0 ? result : null;\n    }\n  }, {\n    key: \"canDrag\",\n    value: function canDrag() {\n      var spec = this.spec;\n      var monitor = this.monitor;\n\n      if (typeof spec.canDrag === 'boolean') {\n        return spec.canDrag;\n      } else if (typeof spec.canDrag === 'function') {\n        return spec.canDrag(monitor);\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: \"isDragging\",\n    value: function isDragging(globalMonitor, target) {\n      var spec = this.spec;\n      var monitor = this.monitor;\n      var isDragging = spec.isDragging;\n      return isDragging ? isDragging(monitor) : target === globalMonitor.getSourceId();\n    }\n  }, {\n    key: \"endDrag\",\n    value: function endDrag() {\n      var spec = this.spec;\n      var monitor = this.monitor;\n      var connector = this.connector;\n      var end = spec.end;\n\n      if (end) {\n        end(monitor.getItem(), monitor);\n      }\n\n      connector.reconnect();\n    }\n  }]);\n\n  return DragSourceImpl;\n}();","map":{"version":3,"mappings":";;AAMA,WAAaA,cAAb;EACC,wBACQC,IADR,EAESC,OAFT,EAGSC,SAHT,EAIE;IAAA;;SAHMF;SACCC;SACAC;EACL;;EALL;IAAA;IAAA,OAOC,qBAAmB;MAClB,IAAMF,IAAI,GAAG,KAAKA,IAAlB;MACA,IAAMC,OAAO,GAAG,KAAKA,OAArB;MAEA,IAAIE,MAAM,GAAa,IAAvB;;MACA,IAAI,OAAOH,IAAI,CAACI,IAAZ,KAAqB,QAAzB,EAAmC;QAClCD,MAAM,GAAGH,IAAI,CAACI,IAAdD;MACA,CAFD,MAEO,IAAI,OAAOH,IAAI,CAACI,IAAZ,KAAqB,UAAzB,EAAqC;QAC3CD,MAAM,GAAGH,IAAK,CAACI,IAAN,CAAoCH,OAApC,CAATE;MACA,CAFM,MAEA;QACNA,MAAM,GAAG,EAATA;MACA;;MACD,OAAOA,MAAM,SAANA,UAAM,WAANA,YAAU,IAAjB;IACA;EApBF;IAAA;IAAA,OAsBC,mBAAiB;MAChB,IAAMH,IAAI,GAAG,KAAKA,IAAlB;MACA,IAAMC,OAAO,GAAG,KAAKA,OAArB;;MACA,IAAI,OAAOD,IAAI,CAACK,OAAZ,KAAwB,SAA5B,EAAuC;QACtC,OAAOL,IAAI,CAACK,OAAZ;MACA,CAFD,MAEO,IAAI,OAAOL,IAAI,CAACK,OAAZ,KAAwB,UAA5B,EAAwC;QAC9C,OAAOL,IAAI,CAACK,OAALL,CAAaC,OAAbD,CAAP;MACA,CAFM,MAEA;QACN,OAAO,IAAP;MACA;IACD;EAhCF;IAAA;IAAA,OAkCC,oBAAkBM,aAAlB,EAAkDC,MAAlD,EAAsE;MACrE,IAAMP,IAAI,GAAG,KAAKA,IAAlB;MACA,IAAMC,OAAO,GAAG,KAAKA,OAArB;MACA,IAAQO,UAAR,GAAuBR,IAAvB,CAAQQ,UAAR;MACA,OAAOA,UAAU,GACdA,UAAU,CAACP,OAAD,CADI,GAEdM,MAAM,KAAKD,aAAa,CAACG,WAAdH,EAFd;IAGA;EAzCF;IAAA;IAAA,OA2CC,mBAAiB;MAChB,IAAMN,IAAI,GAAG,KAAKA,IAAlB;MACA,IAAMC,OAAO,GAAG,KAAKA,OAArB;MACA,IAAMC,SAAS,GAAG,KAAKA,SAAvB;MACA,IAAQQ,GAAR,GAAgBV,IAAhB,CAAQU,GAAR;;MACA,IAAIA,GAAJ,EAAS;QACRA,GAAG,CAACT,OAAO,CAACU,OAARV,EAAD,EAAoBA,OAApB,CAAHS;MACA;;MACDR,SAAS,CAACU,SAAVV;IACA;EApDF;;EAAA;AAAA","names":["DragSourceImpl","spec","monitor","connector","result","item","canDrag","globalMonitor","target","isDragging","getSourceId","end","getItem","reconnect"],"sources":["E:\\Front-End-Challenges\\React-Challenges\\Completed Challenges\\ReactTodo\\node_modules\\react-dnd\\src\\hooks\\useDrag\\DragSourceImpl.ts"],"sourcesContent":["import type { DragDropMonitor, DragSource, Identifier } from 'dnd-core'\n\nimport type { Connector } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragObjectFactory, DragSourceHookSpec } from '../types.js'\n\nexport class DragSourceImpl<O, R, P> implements DragSource {\n\tpublic constructor(\n\t\tpublic spec: DragSourceHookSpec<O, R, P>,\n\t\tprivate monitor: DragSourceMonitor<O, R>,\n\t\tprivate connector: Connector,\n\t) {}\n\n\tpublic beginDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\n\t\tlet result: O | null = null\n\t\tif (typeof spec.item === 'object') {\n\t\t\tresult = spec.item as O\n\t\t} else if (typeof spec.item === 'function') {\n\t\t\tresult = (spec.item as DragObjectFactory<O>)(monitor)\n\t\t} else {\n\t\t\tresult = {} as O\n\t\t}\n\t\treturn result ?? null\n\t}\n\n\tpublic canDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (typeof spec.canDrag === 'boolean') {\n\t\t\treturn spec.canDrag\n\t\t} else if (typeof spec.canDrag === 'function') {\n\t\t\treturn spec.canDrag(monitor)\n\t\t} else {\n\t\t\treturn true\n\t\t}\n\t}\n\n\tpublic isDragging(globalMonitor: DragDropMonitor, target: Identifier) {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst { isDragging } = spec\n\t\treturn isDragging\n\t\t\t? isDragging(monitor)\n\t\t\t: target === globalMonitor.getSourceId()\n\t}\n\n\tpublic endDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst connector = this.connector\n\t\tconst { end } = spec\n\t\tif (end) {\n\t\t\tend(monitor.getItem(), monitor)\n\t\t}\n\t\tconnector.reconnect()\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}