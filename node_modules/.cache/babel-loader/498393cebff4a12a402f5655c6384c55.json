{"ast":null,"code":"var _jsxFileName = \"E:\\\\Front-End-Challenges\\\\React-Challenges\\\\Completed Challenges\\\\ReactTodo\\\\src\\\\components\\\\TodoList\\\\TodoResults.js\",\n    _s = $RefreshSig$();\n\nimport \"./../UI/Todo.css\";\nimport icon_check from \"./../icon-check.svg\";\nimport icon_cross from \"./../icon-cross.svg\";\nimport React from \"react\";\nimport { useDrag, useDrop } from 'react-dnd';\nimport { useMultiDrag } from 'react-dnd-multi-backend';\nimport { ItemType } from \"../../utils/items\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  border: '1px dashed gray',\n  padding: '0.5rem 1rem',\n  backgroundColor: 'white',\n  cursor: 'move'\n};\n\nconst TodoResults = props => {\n  _s();\n\n  const id = props.id;\n  const findCard = props.findCard;\n  const moveCard = props.moveCard;\n  const originalIndex = props.findCard(id).index;\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    type: ItemType.CARD,\n    item: {\n      id,\n      originalIndex\n    },\n    collect: monitor => ({\n      position: monitor.getClientOffset(),\n      isDragging: monitor.isDragging()\n    }),\n    end: (item, monitor) => {\n      const {\n        id: droppedId,\n        originalIndex\n      } = item;\n      const didDrop = monitor.didDrop();\n\n      if (!didDrop) {\n        moveCard(droppedId, originalIndex);\n      }\n    }\n  }), [id, originalIndex, moveCard]);\n  const [[dragProps], {\n    html5: [html5Props, html5Drag],\n    touch: [touchProps, touchDrag]\n  }] = useMultiDrag({\n    item: {\n      type: 'card',\n      color: props.color\n    },\n    collect: monitor => {\n      return {\n        isDragging: monitor.isDragging()\n      };\n    }\n  });\n  const containerStyle = {\n    opacity: dragProps.isDragging ? 0.5 : 1\n  };\n  const html5DragStyle = {\n    backgroundColor: props.color,\n    opacity: html5Props.isDragging ? 0.5 : 1\n  };\n  const touchDragStyle = {\n    backgroundColor: props.color,\n    opacity: touchProps.isDragging ? 0.5 : 1\n  };\n  const [, drop] = useDrop(() => ({\n    accept: ItemType.CARD,\n\n    hover(_ref) {\n      let {\n        id: draggedId\n      } = _ref;\n\n      if (draggedId !== id) {\n        const {\n          index: overIndex\n        } = findCard(id);\n        moveCard(draggedId, overIndex);\n      }\n    }\n\n  }), [findCard, moveCard]);\n  const opacity = isDragging ? 0 : 1;\n\n  const Complete_Task = () => {\n    props.checkState(props.id);\n    props.CheckLen();\n  };\n\n  const onDelete = () => {\n    props.Delete(props.id);\n  };\n\n  const Handle_Error = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    style: html5DragStyle,\n    ref: html5Drag,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-check\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Handle_Errors\",\n        onClick: Handle_Error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `Checked Checked-${props.state}`,\n        onClick: Complete_Task,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: icon_check,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `Checked-Border`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `${props.state}`,\n        children: props.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onDelete,\n      className: \"Deleted\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: icon_cross,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoResults, \"RUqPx/fFwQT0LSGStewcmT/lvmo=\", false, function () {\n  return [useDrag, useMultiDrag, useDrop];\n});\n\n_c = TodoResults;\nexport default TodoResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoResults\");","map":{"version":3,"names":["icon_check","icon_cross","React","useDrag","useDrop","useMultiDrag","ItemType","style","border","padding","backgroundColor","cursor","TodoResults","props","id","findCard","moveCard","originalIndex","index","isDragging","drag","type","CARD","item","collect","monitor","position","getClientOffset","end","droppedId","didDrop","dragProps","html5","html5Props","html5Drag","touch","touchProps","touchDrag","color","containerStyle","opacity","html5DragStyle","touchDragStyle","drop","accept","hover","draggedId","overIndex","Complete_Task","checkState","CheckLen","onDelete","Delete","Handle_Error","state","value"],"sources":["E:/Front-End-Challenges/React-Challenges/Completed Challenges/ReactTodo/src/components/TodoList/TodoResults.js"],"sourcesContent":["import \"./../UI/Todo.css\";\r\nimport icon_check from \"./../icon-check.svg\";\r\nimport icon_cross from \"./../icon-cross.svg\";\r\nimport React from \"react\";\r\nimport { useDrag, useDrop } from 'react-dnd'\r\nimport { useMultiDrag } from 'react-dnd-multi-backend'\r\nimport { ItemType } from \"../../utils/items\";\r\nconst style = {\r\n  border: '1px dashed gray',\r\n  padding: '0.5rem 1rem',\r\n  backgroundColor: 'white',\r\n  cursor: 'move',\r\n}\r\nconst TodoResults = (props) => {\r\n  const id = props.id\r\n  const findCard = props.findCard\r\n  const moveCard = props.moveCard\r\n  const originalIndex = props.findCard(id).index\r\n  \r\n  const [{ isDragging }, drag] = useDrag(\r\n    () => ({\r\n      type: ItemType.CARD,\r\n      item: { id, originalIndex },\r\n      collect: (monitor) => ({\r\n        position: monitor.getClientOffset(),\r\n        isDragging: monitor.isDragging()\r\n      }),\r\n      end: (item, monitor) => {\r\n        const { id: droppedId, originalIndex } = item\r\n        const didDrop = monitor.didDrop()\r\n        if (!didDrop) {\r\n          moveCard(droppedId, originalIndex)\r\n        }\r\n      },\r\n    }),\r\n    [id, originalIndex, moveCard],\r\n  )\r\n\r\n  const [[dragProps], {html5: [html5Props, html5Drag], touch: [touchProps, touchDrag]}] = useMultiDrag({\r\n    item: {type: 'card', color: props.color},\r\n    collect: (monitor) => {\r\n      return {\r\n        isDragging: monitor.isDragging(),\r\n      }\r\n    },\r\n  })\r\n\r\n  const containerStyle = {opacity: dragProps.isDragging ? 0.5 : 1}\r\n  const html5DragStyle = {backgroundColor: props.color, opacity: html5Props.isDragging ? 0.5 : 1}\r\n  const touchDragStyle = {backgroundColor: props.color, opacity: touchProps.isDragging ? 0.5 : 1}\r\n\r\n  const [, drop] = useDrop(\r\n    () => ({\r\n      accept: ItemType.CARD,\r\n      hover({ id: draggedId }) {\r\n        if (draggedId !== id) {\r\n          const { index: overIndex } = findCard(id)\r\n          moveCard(draggedId, overIndex)\r\n        }\r\n      },\r\n    }),\r\n    [findCard, moveCard],\r\n  )\r\n  const opacity = isDragging ? 0 : 1\r\n\r\n\r\n  const Complete_Task = () => {\r\n    props.checkState(props.id);\r\n    props.CheckLen();\r\n  };\r\n\r\n\r\n  const onDelete = () => {\r\n    props.Delete(props.id)\r\n  }\r\n\r\n  const Handle_Error = () => {}\r\n  return (\r\n    <li style={html5DragStyle} ref={html5Drag}>\r\n      <div className=\"list-check\">\r\n        <button className=\"Handle_Errors\" onClick={Handle_Error}></button>\r\n        <button className={`Checked Checked-${props.state}`} onClick={Complete_Task}>\r\n          <img src={icon_check} alt=\"\" />\r\n          <div className={`Checked-Border`}></div>\r\n        </button>\r\n        <p className={`${props.state}`}>{props.value}</p>\r\n      </div>\r\n      <button onClick={onDelete} className=\"Deleted\">\r\n        <img src={icon_cross} alt=\"\" />\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\nexport default TodoResults;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}